import{j as a,a as m}from"./jsx-runtime-c9381026.js";function n({themes:l,currentTheme:t,onChange:i,showLabels:o=!0,size:s="medium",className:r=""}){const d=["theme-toggle",`theme-toggle-${s}`,r].filter(Boolean).join(" ");return a("div",{className:d,children:l.map(e=>m("div",{className:`theme-option ${t===e.id?"theme-option-selected":""}`,onClick:()=>i(e.id),role:"button",tabIndex:0,"aria-pressed":t===e.id,"aria-label":`${e.label} theme`,children:[a("div",{className:"theme-preview",style:{backgroundColor:e.color},"aria-hidden":"true",children:e.icon}),o&&a("span",{className:"theme-label",children:e.label})]},e.id))})}try{n.displayName="ThemeToggle",n.__docgenInfo={description:`ThemeToggle Component

A component for switching between different themes.
Displays theme options as color swatches with optional labels.`,displayName:"ThemeToggle",props:{themes:{defaultValue:null,description:"Array of available themes",name:"themes",required:!0,type:{name:"ThemeOption[]"}},currentTheme:{defaultValue:null,description:"ID of the currently active theme",name:"currentTheme",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback when theme is changed",name:"onChange",required:!0,type:{name:"(themeId: string) => void"}},showLabels:{defaultValue:{value:"true"},description:"Whether to show theme labels",name:"showLabels",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"medium"},description:"Size of the toggle",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},className:{defaultValue:{value:""},description:"Additional CSS class name",name:"className",required:!1,type:{name:"string"}}}}}catch{}export{n as T};
