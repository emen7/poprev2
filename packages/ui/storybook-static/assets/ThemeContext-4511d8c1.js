import{j as x}from"./jsx-runtime-c9381026.js";import{r as a}from"./index-8b3efc3f.js";const o=a.createContext(void 0),l=({initialThemeMode:t="dark",initialTextAlignment:d="left",children:u})=>{const[n,c]=a.useState(()=>typeof window<"u"&&localStorage.getItem("ub-theme-mode")||t),[i,h]=a.useState(()=>typeof window<"u"&&localStorage.getItem("ub-text-alignment")||d),[r,f]=a.useState(()=>typeof window<"u"&&window.matchMedia?window.matchMedia("(prefers-color-scheme: dark)").matches:!1),p=n==="dark"||n==="system"&&r,v=e=>{c(e),typeof window<"u"&&localStorage.setItem("ub-theme-mode",e)},y=e=>{h(e),typeof window<"u"&&localStorage.setItem("ub-text-alignment",e)};return a.useEffect(()=>{if(typeof window<"u"&&window.matchMedia){const e=window.matchMedia("(prefers-color-scheme: dark)"),s=g=>{f(g.matches)};return e.addEventListener("change",s),()=>{e.removeEventListener("change",s)}}},[]),a.useEffect(()=>{typeof document<"u"&&(document.body.classList.remove("dark-theme","light-theme","system-theme"),document.body.classList.add(`${n}-theme`),document.body.classList.remove("text-left","text-justify","text-right","text-center"),document.body.classList.add(`text-${i}`))},[n,i,r]),x(o.Provider,{value:{themeMode:n,isDarkTheme:p,textAlignment:i,setThemeMode:v,setTextAlignment:y},children:u})},m=()=>{const t=a.useContext(o);if(t===void 0)throw new Error("useTheme must be used within a ThemeProvider");return t};try{l.displayName="ThemeProvider",l.__docgenInfo={description:`ThemeProvider Component

Provides theme context to all child components and manages theme state.
Automatically applies the appropriate CSS classes to the document body.
Uses dark mode as the default theme and left alignment as the default text alignment.`,displayName:"ThemeProvider",props:{initialThemeMode:{defaultValue:{value:"dark"},description:"Initial theme mode (defaults to dark)",name:"initialThemeMode",required:!1,type:{name:"enum",value:[{value:'"dark"'},{value:'"light"'},{value:'"system"'}]}},initialTextAlignment:{defaultValue:{value:"left"},description:"Initial text alignment (defaults to left)",name:"initialTextAlignment",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"justify"'},{value:'"right"'},{value:'"center"'}]}},children:{defaultValue:null,description:"Children components",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}try{m.displayName="useTheme",m.__docgenInfo={description:"Hook to use the theme context",displayName:"useTheme",props:{}}}catch{}try{o.displayName="ThemeContext",o.__docgenInfo={description:`ThemeProvider Component

Provides theme context to all child components and manages theme state.
Automatically applies the appropriate CSS classes to the document body.
Uses dark mode as the default theme and left alignment as the default text alignment.`,displayName:"ThemeContext",props:{initialThemeMode:{defaultValue:{value:"dark"},description:"Initial theme mode (defaults to dark)",name:"initialThemeMode",required:!1,type:{name:"enum",value:[{value:'"dark"'},{value:'"light"'},{value:'"system"'}]}},initialTextAlignment:{defaultValue:{value:"left"},description:"Initial text alignment (defaults to left)",name:"initialTextAlignment",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"justify"'},{value:'"right"'},{value:'"center"'}]}},children:{defaultValue:null,description:"Children components",name:"children",required:!0,type:{name:"ReactNode"}}}}}catch{}export{l as T,m as u};
